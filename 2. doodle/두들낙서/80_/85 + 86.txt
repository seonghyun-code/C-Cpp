OOP(Object-Oriented Programming) : 객체지향프로그래밍

OOP의 4대 원리(원칙, 특성, 특징)
1. 캡슐화 54강 (Encapsulation) (클래스 내에서의 추상화)
    무엇 - 데이터(멤버 변수)와 기능(멤버 메소드)을 하나의 단위로 묶어 놓음
        - 데이터를 보이지 않게 가리고, 데이터에 접근하기 위한 메소드만을 노출 (데이터 은닉) 
    언제 - 언제든!
           ㄴ 세탁기 돌릴 때 세탁기의 원리를 알 필요는 x... 그냥 잘 쓰면 됨! 사람은 도구를 잘 사용하니까.
     왜 - 클래스 사용자 : 클래스 내부 구조 이해x, 매소드 사용법만 알면 사용 가능
                        데이터를 실수로 잘못 바꾸는 것을 방지  
          ㄴ 자동차 운전자 : 자동차 원리를 이해할 필요 없어도 운전대, 기어변속 등에 관한 지식만 있으면 운전 가능 & 오히려 어설프게 부품에 접근하면...!
  어떻게 - 클래스 안에 멤버 변수, 멤버 메소드 선언 / 접근 제어
    ex) class TV : vol, channel, setVolume(), ... + 데이터 은닉(데이터는 숨기고 메소드만 노출 : public & private)
        (4분 16초 그림 꼭꼭 보기)        
        데이터 은닉 장점 : 클래스를 사용하는 사람 입장에서는 변수, 내부 구조에 관한 지식은 없어도 된다는 것!! 그냥 메소드 사용법만 잘 알면 됨
   54강? 쯤 나왔다고 함.



2. 상속성 75강 (Inheritance)
    무엇 - 부모 클래스의 멤버를 재사용해서 자식 클래스에서도 사용할 수 있음
    언제 - 부모 클래스에서 할 수 있는 일을 자식 클래스에서도 할 수 있을 때 (Liskov 치환 원칙)
        - 자식 클래스는 부모 클래스의 일종이다. (A is a B)
     왜  - 코드 재사용
   어떻게 - 상속!

<여기부터 86강>

3. 다형성 78강 (Polymorphism)
    무엇 - 동적 다향성(99%가 이 개념만~) : 한 클래스가 그로부터 파생된 다양한 형태를 지닐 수 있음
                       ex) shape - rectangle & circle ... 그런데 getArea 작동 방식이 다름. ... 그냥 상속받은 게 아니라 오버라이딩과 동적바인딩을 통해... 
        - 정적 다향성 : 함수 오버로딩(한 가지 함수가 다양한 형태의 매개변수를), 템플릿 
    언제 - 자식 클래스의 메소드 구현이 부모 클래스와 다를 때 (오버라이딩ㅎㅎㅎ)
     왜  - 자식 클래스에서 하고 싶은 일들이 부모 클래스에서와 다를 수 있음
   어떻게 - 오버라이딩, 가상 함수(동적바인딩을 위해) !! (RTTI, 다형적 클래스)



4. 추상화 80강 (Abstraction) (클래스 간 추상화)
    무엇 - 부모 클래스 : 클래스가 구현해야 할 기능만을 명시 (순수 가상 함수 ... 내용물이 없 ... 자기 자신의 객체를 만들지는 못하지만 자식 클래스로~^^ ... 80강)
          자식 클래스 : 실제 구현
    언제 - [자식 클래스]는 [부모클래스] 할 수 있어야 한다. (A is able to B.)
    ex) Shape : GetArea(), Resize() 순수가상함수 ... 순수가상함수를 하나라도 => 추상클래스(Shape 객체 생성 불가), 가상함수를 하나라도 => 다형적클래스(RTTI)
        Rectangle과 Circle에서 함수를 구현!!
        Shape : 만약 네가 도형이면은 넓이를 구할 수 있고, 크기를 바꿀 수 있어야 한다!를 명시
        Rectangle, Circle에서 구현~~~
     왜  - "자동차" : 운전대, 페달, 기어 변속기 (추상 클래스)
         - 각 부품의 작동 원리는 자동차 종류마다 다름 <-> 우리는 어떤 차든지 모두 운전 가능! ... 클래스 사용법만 알면 됨!
   어떻게 - 추상 클래스 (순수 가상 함수)

* 캡슐화와 추상화의 차이
  캡슐화 : tv 내의 vol, ch, 이런 것들이 추상화
  추상화 : lg와 samsung 간의 구현 방식은 다르겠지만, 사용자 입장에서는 똑같이 사용 가능
          왜냐면 tv라면 전원을 껐다 켰다, 채널업다운, 볼륨업다운, ... 은 같기 때문에!(순수가상함수)